==41786== Memcheck, a memory error detector
==41786== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==41786== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==41786== Command: ./test_bfs
==41786== 
--41786-- UNKNOWN mach_msg unhandled MACH_SEND_TRAILER option
--41786-- UNKNOWN mach_msg unhandled MACH_SEND_TRAILER option (repeated 2 times)
--41786-- UNKNOWN mach_msg unhandled MACH_SEND_TRAILER option (repeated 4 times)
--41786-- UNKNOWN mach_msg unhandled MACH_SEND_TRAILER option (repeated 8 times)
==41786== Conditional jump or move depends on uninitialised value(s)
==41786==    at 0x10323ED79: opal_value_unload (in /usr/local/Cellar/open-mpi/2.1.1/lib/libopen-pal.20.dylib)
==41786==    by 0x103B20201: rte_init (in /usr/local/Cellar/open-mpi/2.1.1/lib/openmpi/mca_ess_singleton.so)
==41786==    by 0x1031BF4DD: orte_init (in /usr/local/Cellar/open-mpi/2.1.1/lib/libopen-rte.20.dylib)
==41786==    by 0x10272DFE5: ompi_mpi_init (in /usr/local/Cellar/open-mpi/2.1.1/lib/libmpi.20.dylib)
==41786==    by 0x1027475AA: MPI_Init_thread (in /usr/local/Cellar/open-mpi/2.1.1/lib/libmpi.20.dylib)
==41786==    by 0x100096219: PetscInitialize (pinit.c:822)
==41786==    by 0x1000011FC: main (test_bfs.c:183)
==41786== 
==41786== Conditional jump or move depends on uninitialised value(s)
==41786==    at 0x1029D9E90: __ultoa (in /usr/lib/system/libsystem_c.dylib)
==41786==    by 0x1029D7364: __vfprintf (in /usr/lib/system/libsystem_c.dylib)
==41786==    by 0x1029FF6C0: __v2printf (in /usr/lib/system/libsystem_c.dylib)
==41786==    by 0x1029D4F49: _vasprintf (in /usr/lib/system/libsystem_c.dylib)
==41786==    by 0x1029CC1A0: asprintf (in /usr/lib/system/libsystem_c.dylib)
==41786==    by 0x102A96735: si_nameinfo (in /usr/lib/system/libsystem_info.dylib)
==41786==    by 0x102A9620D: getnameinfo (in /usr/lib/system/libsystem_info.dylib)
==41786==    by 0x10325FB41: opal_net_get_hostname (in /usr/local/Cellar/open-mpi/2.1.1/lib/libopen-pal.20.dylib)
==41786==    by 0x103FC56B8: split_and_resolve (in /usr/local/Cellar/open-mpi/2.1.1/lib/openmpi/mca_btl_tcp.so)
==41786==    by 0x103FC4340: mca_btl_tcp_component_init (in /usr/local/Cellar/open-mpi/2.1.1/lib/openmpi/mca_btl_tcp.so)
==41786==    by 0x103267167: mca_btl_base_select (in /usr/local/Cellar/open-mpi/2.1.1/lib/libopen-pal.20.dylib)
==41786==    by 0x103FB1B4F: mca_bml_r2_component_init (in /usr/local/Cellar/open-mpi/2.1.1/lib/openmpi/mca_bml_r2.so)
==41786== 
==41786== Conditional jump or move depends on uninitialised value(s)
==41786==    at 0x10000FE9C: strlen (in /usr/local/Cellar/valgrind/3.13.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==41786==    by 0x102A8D0FF: LI_ils_create (in /usr/lib/system/libsystem_info.dylib)
==41786==    by 0x102A96777: si_nameinfo (in /usr/lib/system/libsystem_info.dylib)
==41786==    by 0x102A9620D: getnameinfo (in /usr/lib/system/libsystem_info.dylib)
==41786==    by 0x10325FB41: opal_net_get_hostname (in /usr/local/Cellar/open-mpi/2.1.1/lib/libopen-pal.20.dylib)
==41786==    by 0x103FC56B8: split_and_resolve (in /usr/local/Cellar/open-mpi/2.1.1/lib/openmpi/mca_btl_tcp.so)
==41786==    by 0x103FC4340: mca_btl_tcp_component_init (in /usr/local/Cellar/open-mpi/2.1.1/lib/openmpi/mca_btl_tcp.so)
==41786==    by 0x103267167: mca_btl_base_select (in /usr/local/Cellar/open-mpi/2.1.1/lib/libopen-pal.20.dylib)
==41786==    by 0x103FB1B4F: mca_bml_r2_component_init (in /usr/local/Cellar/open-mpi/2.1.1/lib/openmpi/mca_bml_r2.so)
==41786==    by 0x10278A747: mca_bml_base_init (in /usr/local/Cellar/open-mpi/2.1.1/lib/libmpi.20.dylib)
==41786==    by 0x10272E14E: ompi_mpi_init (in /usr/local/Cellar/open-mpi/2.1.1/lib/libmpi.20.dylib)
==41786==    by 0x1027475AA: MPI_Init_thread (in /usr/local/Cellar/open-mpi/2.1.1/lib/libmpi.20.dylib)
==41786== 
==41786== Conditional jump or move depends on uninitialised value(s)
==41786==    at 0x10000FE9C: strlen (in /usr/local/Cellar/valgrind/3.13.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==41786==    by 0x102A8DB16: LI_ils_create (in /usr/lib/system/libsystem_info.dylib)
==41786==    by 0x102A96777: si_nameinfo (in /usr/lib/system/libsystem_info.dylib)
==41786==    by 0x102A9620D: getnameinfo (in /usr/lib/system/libsystem_info.dylib)
==41786==    by 0x10325FB41: opal_net_get_hostname (in /usr/local/Cellar/open-mpi/2.1.1/lib/libopen-pal.20.dylib)
==41786==    by 0x103FC56B8: split_and_resolve (in /usr/local/Cellar/open-mpi/2.1.1/lib/openmpi/mca_btl_tcp.so)
==41786==    by 0x103FC4340: mca_btl_tcp_component_init (in /usr/local/Cellar/open-mpi/2.1.1/lib/openmpi/mca_btl_tcp.so)
==41786==    by 0x103267167: mca_btl_base_select (in /usr/local/Cellar/open-mpi/2.1.1/lib/libopen-pal.20.dylib)
==41786==    by 0x103FB1B4F: mca_bml_r2_component_init (in /usr/local/Cellar/open-mpi/2.1.1/lib/openmpi/mca_bml_r2.so)
==41786==    by 0x10278A747: mca_bml_base_init (in /usr/local/Cellar/open-mpi/2.1.1/lib/libmpi.20.dylib)
==41786==    by 0x10272E14E: ompi_mpi_init (in /usr/local/Cellar/open-mpi/2.1.1/lib/libmpi.20.dylib)
==41786==    by 0x1027475AA: MPI_Init_thread (in /usr/local/Cellar/open-mpi/2.1.1/lib/libmpi.20.dylib)
==41786== 
==41786== Conditional jump or move depends on uninitialised value(s)
==41786==    at 0x10000FE9C: strlen (in /usr/local/Cellar/valgrind/3.13.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==41786==    by 0x102A96283: getnameinfo (in /usr/lib/system/libsystem_info.dylib)
==41786==    by 0x10325FB41: opal_net_get_hostname (in /usr/local/Cellar/open-mpi/2.1.1/lib/libopen-pal.20.dylib)
==41786==    by 0x103FC56B8: split_and_resolve (in /usr/local/Cellar/open-mpi/2.1.1/lib/openmpi/mca_btl_tcp.so)
==41786==    by 0x103FC4340: mca_btl_tcp_component_init (in /usr/local/Cellar/open-mpi/2.1.1/lib/openmpi/mca_btl_tcp.so)
==41786==    by 0x103267167: mca_btl_base_select (in /usr/local/Cellar/open-mpi/2.1.1/lib/libopen-pal.20.dylib)
==41786==    by 0x103FB1B4F: mca_bml_r2_component_init (in /usr/local/Cellar/open-mpi/2.1.1/lib/openmpi/mca_bml_r2.so)
==41786==    by 0x10278A747: mca_bml_base_init (in /usr/local/Cellar/open-mpi/2.1.1/lib/libmpi.20.dylib)
==41786==    by 0x10272E14E: ompi_mpi_init (in /usr/local/Cellar/open-mpi/2.1.1/lib/libmpi.20.dylib)
==41786==    by 0x1027475AA: MPI_Init_thread (in /usr/local/Cellar/open-mpi/2.1.1/lib/libmpi.20.dylib)
==41786==    by 0x100096219: PetscInitialize (pinit.c:822)
==41786==    by 0x1000011FC: main (test_bfs.c:183)
==41786== 
Running 10 tests of breadth_first_search()
  Test 0:
    Test: 1024 edges
      Passed.
  Test 1:
    Test: 1024 edges
      Passed.
  Test 2:
    Test: 1024 edges
      Passed.
  Test 3:
    Test: 1024 edges
      Passed.
  Test 4:
    Test: 1024 edges
      Passed.
  Test 5:
    Test: 1024 edges
      Passed.
  Test 6:
    Test: 1024 edges
      Passed.
  Test 7:
    Test: 1024 edges
      Passed.
  Test 8:
    Test: 1024 edges
      Passed.
  Test 9:
    Test: 1024 edges
      Passed.
==41786== 
==41786== Process terminating with default action of signal 11 (SIGSEGV)
==41786==  Access not within mapped region at address 0x70000311F405
==41786==    at 0x102C24DAF: _OSSpinLockLockSlow (in /usr/lib/system/libsystem_platform.dylib)
==41786==    by 0x102C39670: pthread_join (in /usr/lib/system/libsystem_pthread.dylib)
==41786==    by 0x103B42B47: pmix_stop_progress_thread (in /usr/local/Cellar/open-mpi/2.1.1/lib/openmpi/mca_pmix_pmix112.so)
==41786==    by 0x103B46D9A: PMIx_Finalize (in /usr/local/Cellar/open-mpi/2.1.1/lib/openmpi/mca_pmix_pmix112.so)
==41786==    by 0x103B2EDB9: pmix1_client_finalize (in /usr/local/Cellar/open-mpi/2.1.1/lib/openmpi/mca_pmix_pmix112.so)
==41786==    by 0x103B20779: rte_finalize (in /usr/local/Cellar/open-mpi/2.1.1/lib/openmpi/mca_ess_singleton.so)
==41786==    by 0x1031BF2A3: orte_finalize (in /usr/local/Cellar/open-mpi/2.1.1/lib/libopen-rte.20.dylib)
==41786==    by 0x10272EE3D: ompi_mpi_finalize (in /usr/local/Cellar/open-mpi/2.1.1/lib/libmpi.20.dylib)
==41786==    by 0x10009F19E: PetscFinalize (pinit.c:1514)
==41786==    by 0x10000253E: main (test_bfs.c:249)
==41786==  If you believe this happened as a result of a stack
==41786==  overflow in your program's main thread (unlikely but
==41786==  possible), you can try to increase the size of the
==41786==  main thread stack using the --main-stacksize= flag.
==41786==  The main thread stack size used in this run was 8388608.
==41786== 
==41786== HEAP SUMMARY:
==41786==     in use at exit: 731,897 bytes in 7,394 blocks
==41786==   total heap usage: 16,768 allocs, 9,374 frees, 5,774,768 bytes allocated
==41786== 

Memcheck: mc_leakcheck.c:1108 (void lc_scan_memory(Addr, SizeT, Bool, Int, Int, Addr, SizeT)): Assertion 'bad_scanned_addr >= VG_ROUNDUP(start, sizeof(Addr))' failed.

host stacktrace:
==41786==    at 0x258041B72: ???
==41786==    by 0x258041EDF: ???
==41786==    by 0x258041EC2: ???
==41786==    by 0x258002B19: ???
==41786==    by 0x2580023F4: ???
==41786==    by 0x2580010FE: ???
==41786==    by 0x25800E9CE: ???
==41786==    by 0x25804DB5F: ???
==41786==    by 0x2580CEA4F: ???

sched status:
  running_tid=1


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

